init;

% Inicializar o problema
% Ordem do problema
n = 3; 

% Palpite inicial para a solução
x0 = [0, 0, 0]';

% Função objetivo
% Definida a partir de um arquivo
% f = @funcFile;

% Definida diretamente
f = @(x) 4250*x(1).^2 - 1000*x(1)*x(2) - 2500*x(1)*x(3) - 1000*x(1) + ...
    1500*x(2).^2 - 500*x(2)*x(3) - 2000*x(2) + 5750*x(3).^2 - 3000*x(3);

% Gradiente analítico
df = @gradFile;

% Definido diretament
df = @(x) [8500*x(1) - 1000*x(2) - 2500*x(3) - 1000
           3000*x(2) - 1000*x(1) - 500*x(3) - 2000
           11500*x(3) - 500*x(2) - 2500*x(1) - 3000];

% tol = 1e-5;
% theta = 1;
% h = 1e-10;

% [xOpt, fOpt, nVal, k, alfaValues] = varMet(f, x0, df, tol, theta, h);
% [xOpt, fOpt, nVal, k, alfaValues] = varMet(f, x0, df, tol, theta);
% [xOpt, fOpt, nVal, k, alfaValues] = varMet(f, x0, df, tol);
% [xOpt, fOpt, nVal, k, alfaValues] = varMet(f, x0, df);
[xOpt, fOpt, nVal, k, alfaValues] = varMet(f, x0);
       
for i = 1:n
    fprintf(['x',num2str(i),'* = %.4f\n'], xOpt(i))
end

fprintf('f(x*) = %.4f\n', fOpt)
fprintf('Número de avaliações da função objetivo: %d\n', nVal)
fprintf('Número de iterações: %d\n', k)